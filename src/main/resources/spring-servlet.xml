<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:default-servlet-handler />

    <!-- 1、配置映射器与适配器 -->
    <!--<mvc:annotation-driven />-->
    <!--<mvc:annotation-driven validator="validator"/>-->
    <mvc:annotation-driven validator="validator">
        <mvc:message-converters>
            <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--<property name="messageConverters">-->
    <!--<list>-->
    <!--<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />-->
    <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
    <!--<property name="supportedMediaTypes">-->
    <!--<list>-->
    <!--<value>text/plain;charset=UTF-8</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--<bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />-->
    <!--<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />-->
    <!--<bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />-->
    <!--<bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->


    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="lxk" />
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <!-- 输出对象转JSON支持   -->
    <!--<bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/plain;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="jsonConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>-->

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!--<bean-->
            <!--class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="stringConverter"/>-->
                <!--<ref bean="jsonConverter" />-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题 -->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
        <!--<property name="messageConverters">-->
            <!--<list>-->
                <!--<ref bean="stringConverter"/>-->
                <!--<ref bean="jsonConverter" />-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <!-- 方法校验 -->
    <!--<bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>  就这样写从配置文件取汉字会乱码-->

     <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
        <property name="validator" ref="validator"/>
     </bean>



    <!-- 指定自己定义的validator -->
    <!--<mvc:annotation-driven validator="validator"/>-->

    <!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
                <value>classpath:ValidationMessages</value>
                <value>classpath:org/hibernate/validator/ValidationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>


    <!--本地化-->
    <!--本地化解析器-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="cookieName" value="locale"/>
        <property name="cookieMaxAge" value="-1"/>
        <property name="defaultLocale" value="en_US"/>
    </bean>
    <!--设置本地化信息的拦截器-->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>
    </mvc:interceptors>


    <!--&lt;!&ndash; 校验错误信息配置文件 &ndash;&gt;-->
    <!--<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">-->
        <!--&lt;!&ndash; 资源文件名 &ndash;&gt;-->
        <!--<property name="basenames">-->
            <!--<list>-->
                <!--<value>classpath:ValidationMessages.properties</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash; 资源文件编码格式 &ndash;&gt;-->
        <!--<property name="fileEncodings" value="UTF-8"/>-->
        <!--<property name="defaultEncoding" value="UTF-8"/>-->
        <!--&lt;!&ndash; 对资源文件内容缓存时间，单位秒 &ndash;&gt;-->
        <!--<property name="cacheSeconds" value="120"/>-->
    <!--</bean>-->



    <!--  配置静态资源，防止被springmvc过滤 -->
    <!--<mvc:resources location="/" mapping="/**/*.html"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.js"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.css"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.png"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.gif"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.woff"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.ttf"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.jpg"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.mp3"/>-->
    <!--<mvc:resources location="/" mapping="/**/*.mp4"/>-->


</beans>